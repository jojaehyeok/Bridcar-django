# Generated by Django 4.0.6 on 2022-09-15 15:33

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import pcar.helpers
import phonenumber_field.modelfields
import users.models.agent_profile
import users.models.dealer_profile
import users.models.dealer_company
import users.models.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='회원 이름 (실명)')),
                ('mobile_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='핸드폰 번호')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='관리자 페이지 접근 가능 권한')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='최고관리자 (상황실 웹사이트 접근 가능)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('referer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brought_users', to=settings.AUTH_USER_MODEL, verbose_name='추천인')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '유저',
                'verbose_name_plural': '유저 목록',
                'db_table': 'users',
            },
            managers=[
                ('objects', users.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SMSAuthenticationHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='인증 요청 시각')),
                ('mobile_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='핸드폰 번호')),
                ('purpose', models.CharField(choices=[('signin', '로그인'), ('control_room_signin', '로그인'), ('signup', '회원가입'), ('find_email', '이메일 찾기'), ('find_password', '비밀번호 찾기'), ('change_mobile_number', '핸드폰 번호 변경')], max_length=32, verbose_name='본인인증 목적')),
                ('authentication_code', models.CharField(max_length=10, verbose_name='인증번호')),
            ],
            options={
                'verbose_name': '문자인증 요청',
                'verbose_name_plural': '문자인증 요청 내역',
                'db_table': 'sms_authentication_histories',
            },
        ),
        migrations.CreateModel(
            name='TossVirtualAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='계좌 생성 시각')),
                ('expired_at', models.DateTimeField(verbose_name='계좌 만료 시각')),
                ('order_id', models.CharField(max_length=128, unique=True, verbose_name='오더 ID')),
                ('secret', models.CharField(max_length=128, verbose_name='TOSS 결제 시크릿 키')),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='입금 금액')),
                ('bank', models.CharField(max_length=32, verbose_name='입금 은행')),
                ('account_number', models.CharField(max_length=128, verbose_name='입금 계좌번호')),
                ('is_deposited', models.BooleanField(default=False, verbose_name='입금 완료 여부')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toss_virtual_accounts', to=settings.AUTH_USER_MODEL, verbose_name='소유한 유저')),
            ],
            options={
                'verbose_name': '토스 가상계좌',
                'verbose_name_plural': '토스 가상계좌 목록',
                'db_table': 'toss_virtual_accounts',
            },
        ),
        migrations.CreateModel(
            name='DealerProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100, verbose_name='상호명')),
                ('representative_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='대표자 이름')),
                ('business_category', models.CharField(blank=True, max_length=100, null=True, verbose_name='업종')),
                ('require_publish_bill', models.BooleanField(blank=True, default=False, verbose_name='계산서 발행유무')),
                ('business_registration_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='사업자 등록번호')),
                ('business_registration', models.ImageField(blank=True, null=True, upload_to=pcar.helpers.PreprocessUploadPath(users.models.dealer_company.business_registration_image_path_getter, 'business_registration', use_uuid_name=True), verbose_name='사업자등록증 사본')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='기타 메모')),
                ('basic_evaluation_cost', models.PositiveIntegerField(default=50000, verbose_name='기본 평카 비용')),
                ('basic_inspection_cost', models.PositiveIntegerField(default=50000, verbose_name='기본 검수 비용')),
                ('main_warehouses', models.ManyToManyField(blank=True, null=True, related_name='dealer_profiles', to='locations.commonlocation', verbose_name='주 입고지')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dealer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '딜러',
                'verbose_name_plural': '딜러 목록',
                'db_table': 'dealer_profiles',
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
            ],
            options={
                'verbose_name': '평카인',
                'verbose_name_plural': '평카인 목록',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
            managers=[
                ('objects', users.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ControlRoomUser',
            fields=[
            ],
            options={
                'verbose_name': '상황실 관리자',
                'verbose_name_plural': '상황실 관리자 목록',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
            managers=[
                ('objects', users.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
            ],
            options={
                'verbose_name': '딜러',
                'verbose_name_plural': '딜러 목록',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
            managers=[
                ('objects', users.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WithdrawalRequesting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='출금 신청 시각')),
                ('amount', models.PositiveIntegerField(verbose_name='출금 요청 금액')),
                ('is_processed', models.BooleanField(default=False, verbose_name='출금 처리 여부')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_requestings', to='users.agent', verbose_name='대상 평카인')),
            ],
            options={
                'verbose_name': '출금 요청',
                'verbose_name_plural': '출금 요청 목록',
                'db_table': 'withdrawal_requestings',
            },
        ),
        migrations.CreateModel(
            name='BalanceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_at', models.DateTimeField(auto_now_add=True, verbose_name='거래 시각')),
                ('type', models.CharField(choices=[('manual_deposit', '수동 입금'), ('deposit', '가상계좌 입금'), ('withdrawal', '출금'), ('revenue', '수익금 입금'), ('fee_escrow', '수수료 에스크로')], max_length=32, verbose_name='금액 구분')),
                ('amount', models.PositiveIntegerField(verbose_name='금액')),
                ('acc_amount', models.PositiveIntegerField(default=0, verbose_name='누적 금액')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balance_histories', to='users.agent', verbose_name='대상 유저')),
            ],
            options={
                'verbose_name': '계좌 사용 내역',
                'verbose_name_plural': '계좌 사용 내역 목록',
                'db_table': 'balance_histories',
            },
        ),
        migrations.CreateModel(
            name='AgentSettlementAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100, verbose_name='은행')),
                ('account_number', models.CharField(max_length=100, verbose_name='계좌번호')),
                ('account_holder', models.CharField(max_length=100, verbose_name='예금주')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_settlement_account', to='users.agent')),
            ],
            options={
                'verbose_name': '평카인 정산계좌',
                'verbose_name_plural': '평카인 정산계좌 목록',
                'db_table': 'agent_settlement_accounts',
            },
        ),
        migrations.CreateModel(
            name='AgentProfile',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='평카인 사번')),
                ('level', models.CharField(choices=[('A', 'A레벨'), ('B', 'B레벨'), ('C', 'C레벨')], default='A', max_length=10, verbose_name='평카인 레벨')),
                ('profile_image', models.ImageField(upload_to=pcar.helpers.PreprocessUploadPath(users.models.agent_profile.profile_image_image_path_getter, filename_prefix='agent_profile_image', use_uuid_name=True), verbose_name='평카인 프로필 사진')),
                ('evaluation_certification', models.ImageField(blank=True, null=True, upload_to=pcar.helpers.PreprocessUploadPath(users.models.agent_profile.profile_image_image_path_getter, filename_prefix='agent_evaluation_certification', use_uuid_name=True), verbose_name='진단평가사 자격증')),
                ('career', models.TextField(blank=True, null=True, verbose_name='경력내용')),
                ('balance', models.PositiveIntegerField(default=0, verbose_name='현재 잔액')),
                ('introduction', models.TextField(blank=True, max_length=500, null=True, verbose_name='인사말')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to='users.agent')),
            ],
            options={
                'verbose_name': '평카인 프로필',
                'verbose_name_plural': '평카인 프로필 목록',
                'db_table': 'agent_profiles',
            },
        ),
        migrations.CreateModel(
            name='AgentLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='마지막 업데이트 시각')),
                ('coord', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='현재 평카인 좌표')),
                ('manual_road_address', models.CharField(blank=True, max_length=300, null=True, verbose_name='수동 도로명 주소')),
                ('manual_coord', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='수동 주소 좌표')),
                ('using_auto_dispatch', models.BooleanField(default=True, verbose_name='자동배차 사용유무')),
                ('desired_destination_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='희망 도착지')),
                ('using_manual_address', models.BooleanField(default=False, verbose_name='수동 주소로 검색 여부')),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_location', to='users.agent', verbose_name='대상 평카인')),
            ],
            options={
                'verbose_name': '에이전트 위치정보',
                'verbose_name_plural': '에이전트 위치정보 목록',
                'db_table': 'agent_locations',
            },
        ),
    ]
